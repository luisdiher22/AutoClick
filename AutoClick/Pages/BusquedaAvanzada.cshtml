@page "/busqueda-avanzada"
@model BusquedaAvanzadaModel
@{
    ViewData["Title"] = "Búsqueda Avanzada - AutoClick.cr";
}

<!-- Dark Theme Page Container -->
<div class="busqueda-avanzada-page">
    <div class="busqueda-container">
        <!-- Breadcrumb Navigation -->
        <nav class="busqueda-breadcrumb">
            <a asp-page="/Index" class="breadcrumb-link">Inicio</a>
            <span class="breadcrumb-separator">/</span>
            <span class="breadcrumb-current">Búsqueda avanzada</span>
        </nav>

        <div class="busqueda-content">
            <!-- Sidebar Filters -->
            <aside class="busqueda-sidebar">
                <!-- Filter Container -->
                <div class="busqueda-filters-container">
                    <div class="busqueda-filters-section">
                        <!-- Filters Header -->
                        <h3 class="busqueda-filters-title">Filtros de búsqueda</h3>
                        
                        <!-- Applied Filters Tags -->
                        @if (Model.AppliedFilters.Any())
                        {
                            <div class="applied-filters-tags">
                                @foreach (var filter in Model.AppliedFilters)
                                {
                                    <div class="filter-tag">
                                        <span>@filter</span>
                                        <button class="remove-filter-btn" onclick="removeFilter('@filter')" title="Eliminar filtro">×</button>
                                    </div>
                                }
                            </div>
                        }

                        <!-- Filter Form -->
                        <form method="get" class="busqueda-filters-form">
                            <input type="hidden" name="page" value="1" />
                            <input type="hidden" name="sortBy" value="@Model.SortBy" />

                            <!-- Provincia -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Provincia</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="province" class="busqueda-filter-select" id="province-select" onchange="onProvinceChange()">
                                        <option value="">Todas las provincias</option>
                                        @foreach (var province in Model.AvailableProvinces)
                                        {
                                            <option value="@province" selected="@(Model.Province == province)">@province</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <!-- Cantón -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Cantón</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="canton" class="busqueda-filter-select" id="canton-select">
                                        <option value="">Todos los cantones</option>
                                        @foreach (var canton in Model.AvailableCantons)
                                        {
                                            <option value="@canton" selected="@(Model.Canton == canton)">@canton</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <!-- Marca -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Marca</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="brand" class="busqueda-filter-select" id="brand-select" onchange="onBrandChange()">
                                        <option value="">Todas las marcas</option>
                                        @foreach (var brand in Model.AvailableBrands)
                                        {
                                            <option value="@brand" selected="@(Model.Brand == brand)">@brand</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <!-- Modelo -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Modelo</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="model" class="busqueda-filter-select" id="model-select">
                                        <option value="">Todos los modelos</option>
                                        @foreach (var modelName in Model.AvailableModels)
                                        {
                                            <option value="@modelName" selected="@(Model.Model == modelName)">@modelName</option>
                                        }
                                    </select>
                                </div>
                            </div>

                            <!-- Rango de precio -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Rango de precio</label>
                                <div class="busqueda-price-range">
                                    <div class="price-input-group">
                                        <label class="price-input-label">Min</label>
                                        <input type="number" name="minPrice" placeholder="$" class="busqueda-price-field" value="@Model.MinPrice" />
                                    </div>
                                    <span class="price-separator">hasta</span>
                                    <div class="price-input-group">
                                        <label class="price-input-label">Max</label>
                                        <input type="number" name="maxPrice" placeholder="$" class="busqueda-price-field" value="@Model.MaxPrice" />
                                    </div>
                                </div>
                            </div>

                            <!-- Kilometraje -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Kilometraje</label>
                                <div class="busqueda-price-range">
                                    <div class="price-input-group">
                                        <label class="price-input-label">Min</label>
                                        <input type="number" name="minKm" class="busqueda-price-field" value="@Model.MinKm" />
                                    </div>
                                    <span class="price-separator">hasta</span>
                                    <div class="price-input-group">
                                        <label class="price-input-label">Max</label>
                                        <input type="number" name="maxKm" class="busqueda-price-field" value="@Model.MaxKm" />
                                    </div>
                                </div>
                            </div>

                            <!-- Año -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Año</label>
                                <div class="busqueda-price-range">
                                    <div class="price-input-group">
                                        <label class="price-input-label">Min</label>
                                        <div class="busqueda-select-wrapper">
                                            <select name="minYear" class="busqueda-filter-select small">
                                                <option value="">Cualquiera</option>
                                                @foreach (var year in Model.AvailableYears)
                                                {
                                                    <option value="@year" selected="@(Model.MinYear == year)">@year</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                    <span class="price-separator">hasta</span>
                                    <div class="price-input-group">
                                        <label class="price-input-label">Max</label>
                                        <div class="busqueda-select-wrapper">
                                            <select name="maxYear" class="busqueda-filter-select small">
                                                <option value="">Cualquiera</option>
                                                @foreach (var year in Model.AvailableYears)
                                                {
                                                    <option value="@year" selected="@(Model.MaxYear == year)">@year</option>
                                                }
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Additional Filters -->
                            <!-- Carrocería -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Carrocería</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="bodyType" class="busqueda-filter-select">
                                        <option value="">Todas las carrocerías</option>
                                        @foreach (var bodyType in Model.AvailableBodyTypes)
                                        {
                                            <option value="@bodyType" selected="@(Model.BodyType == bodyType)">@bodyType</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Combustible -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Combustible/Propulsión</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="fuelType" class="busqueda-filter-select">
                                        <option value="">Todos los combustibles</option>
                                        @foreach (var fuelType in Model.AvailableFuelTypes)
                                        {
                                            <option value="@fuelType" selected="@(Model.FuelType == fuelType)">@fuelType</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Transmisión -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Transmisión</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="transmission" class="busqueda-filter-select">
                                        <option value="">Todas las transmisiones</option>
                                        @foreach (var transmission in Model.AvailableTransmissions)
                                        {
                                            <option value="@transmission" selected="@(Model.Transmission == transmission)">@transmission</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            
                            <!-- Condición -->
                            <div class="busqueda-filter-group">
                                <label class="busqueda-filter-label">Condición</label>
                                <div class="busqueda-select-wrapper">
                                    <select name="condition" class="busqueda-filter-select">
                                        <option value="">Todas las condiciones</option>
                                        @foreach (var condition in Model.AvailableConditions)
                                        {
                                            <option value="@condition" selected="@(Model.Condition == condition)">@condition</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Sidebar Advertisement -->
                @await Component.InvokeAsync("CarruselPublicidad", new { formato = "cuadrado", seccion = "busqueda-sidebar" })
            </aside>

            <!-- Main Content -->
            <main class="busqueda-main">
                <!-- Sort Dropdown -->
                <div class="busqueda-sort-header">
                    <div class="busqueda-sort-wrapper">
                        <select class="busqueda-sort-select" onchange="changeBusquedaSorting(this.value)">
                            <option value="recent" selected="@(Model.SortBy == "recent")">Ordenar por: Más recientes</option>
                            <option value="price-asc" selected="@(Model.SortBy == "price-asc")">Ordenar por: Precio menor a mayor</option>
                            <option value="price-desc" selected="@(Model.SortBy == "price-desc")">Ordenar por: Precio mayor a menor</option>
                            <option value="year" selected="@(Model.SortBy == "year")">Ordenar por: Año más nuevo</option>
                        </select>
                    </div>
                </div>

                <!-- Cars Grid - 2 Columns -->
                <div class="busqueda-cars-grid">
                    @foreach (var auto in Model.Autos)
                    {
                        <a asp-page="/Producto" asp-route-id="@auto.Id" class="simple-auto-tile">
                            <!-- Car Image -->
                            <div class="simple-auto-tile-image">
                                <img src="@auto.ImagenPrincipal" alt="@auto.NombreCompleto" />

                                <!-- Botón de Favoritos -->
                                <button class="favorite-btn" 
                                        data-auto-id="@auto.Id" 
                                        data-email-usuario="@(User.Identity?.IsAuthenticated == true ? User.FindFirst(System.Security.Claims.ClaimTypes.Email)?.Value ?? User.FindFirst("Email")?.Value : "")"
                                        title="Agregar a favoritos"
                                        type="button">
                                    <img src="https://autoclickstorage.blob.core.windows.net/uploads/Component%20183.png" 
                                         alt="Favorito" />
                                </button>
                            </div>

                            <!-- Car Info -->
                            <div class="simple-auto-tile-info">
                                <div class="simple-auto-tile-title">@auto.NombreCompleto</div>
                                <div class="simple-auto-tile-price">@auto.PrecioEnCRC</div>
                            </div>
                        </a>
                    }
                </div>

                <!-- Advertisement Banners -->
                <div style="margin-bottom: 24px;">
                    @await Component.InvokeAsync("CarruselPublicidad", new { formato = "horizontal", seccion = "busqueda-banner-1" })
                </div>

                @await Component.InvokeAsync("CarruselPublicidad", new { formato = "horizontal", seccion = "busqueda-banner-2" })

                <!-- Pagination -->
                <nav class="busqueda-pagination" aria-label="Paginación de búsqueda">
                    <div class="pagination-container">
                        <!-- Previous Button -->
                        <a href="@Url.Page("/BusquedaAvanzada", new { page = Model.CurrentPage - 1, sortBy = Model.SortBy })" 
                           class="busqueda-pagination-arrow @(Model.CurrentPage <= 1 ? "disabled" : "")">
                            <div class="pagination-arrow-icon left"></div>
                        </a>

                        <!-- Page Numbers -->
                        @for (int i = 1; i <= Math.Min(5, Model.TotalPages); i++)
                        {
                            <a href="@Url.Page("/BusquedaAvanzada", new { page = i, sortBy = Model.SortBy })" 
                               class="busqueda-pagination-number @(Model.CurrentPage == i ? "active" : "")">
                                @i
                            </a>
                        }

                        @if (Model.TotalPages > 5)
                        {
                            <span class="busqueda-pagination-ellipsis">…</span>
                            
                            <a href="@Url.Page("/BusquedaAvanzada", new { page = Model.TotalPages, sortBy = Model.SortBy })" 
                               class="busqueda-pagination-number @(Model.CurrentPage == Model.TotalPages ? "active" : "")">
                                584
                            </a>
                        }

                        <!-- Next Button -->
                        <a href="@Url.Page("/BusquedaAvanzada", new { page = Model.CurrentPage + 1, sortBy = Model.SortBy })" 
                           class="busqueda-pagination-arrow @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                            <div class="pagination-arrow-icon right"></div>
                        </a>
                    </div>
                </nav>
            </main>
        </div>
    </div>

    <!-- Footer -->
    <partial name="_Footer" />
</div>

<script>
function changeBusquedaSorting(sortBy) {
    const url = new URL(window.location);
    url.searchParams.set('sortBy', sortBy);
    url.searchParams.set('page', '1');
    window.location.href = url.toString();
}

function onProvinceChange() {
    const provinceSelect = document.getElementById('province-select');
    const cantonSelect = document.getElementById('canton-select');
    
    // Clear canton selection when province changes
    cantonSelect.selectedIndex = 0;
    
    // You could implement AJAX calls here to load cantons dynamically
    // For now, we'll submit the form to reload with new canton options
    if (provinceSelect.value) {
        // Auto-submit to get updated canton list
        setTimeout(() => {
            const form = document.querySelector('.busqueda-filters-form');
            form.submit();
        }, 100);
    }
}

function onBrandChange() {
    const brandSelect = document.getElementById('brand-select');
    const modelSelect = document.getElementById('model-select');
    
    // Clear model selection when brand changes
    modelSelect.selectedIndex = 0;
    
    // Auto-submit to get updated model list
    if (brandSelect.value) {
        setTimeout(() => {
            const form = document.querySelector('.busqueda-filters-form');
            form.submit();
        }, 100);
    }
}

function removeFilter(filterValue) {
    const url = new URL(window.location);
    
    // Check which parameter to remove based on the filter value
    const currentBrand = '@Model.Brand';
    const currentModel = '@Model.Model';
    const currentProvince = '@Model.Province';
    const currentCanton = '@Model.Canton';
    const currentBodyType = '@Model.BodyType';
    const currentFuelType = '@Model.FuelType';
    const currentTransmission = '@Model.Transmission';
    const currentCondition = '@Model.Condition';
    
    if (filterValue === currentBrand) {
        url.searchParams.delete('brand');
        url.searchParams.delete('model'); // Also clear model when removing brand
    } else if (filterValue === currentModel) {
        url.searchParams.delete('model');
    } else if (filterValue === currentProvince) {
        url.searchParams.delete('province');
        url.searchParams.delete('canton'); // Also clear canton when removing province
    } else if (filterValue === currentCanton) {
        url.searchParams.delete('canton');
    } else if (filterValue === currentBodyType) {
        url.searchParams.delete('bodyType');
    } else if (filterValue === currentFuelType) {
        url.searchParams.delete('fuelType');
    } else if (filterValue === currentTransmission) {
        url.searchParams.delete('transmission');
    } else if (filterValue === currentCondition) {
        url.searchParams.delete('condition');
    } else if (filterValue.includes('₡')) {
        // Price range filter
        url.searchParams.delete('minPrice');
        url.searchParams.delete('maxPrice');
    } else if (filterValue.includes('km')) {
        // Kilometrage filter
        url.searchParams.delete('minKm');
        url.searchParams.delete('maxKm');
    } else if (/^\d{4}/.test(filterValue)) {
        // Year filter (starts with 4 digits)
        url.searchParams.delete('minYear'); 
        url.searchParams.delete('maxYear');
    }
    
    url.searchParams.set('page', '1');
    window.location.href = url.toString();
}

function clearAllFilters() {
    const url = new URL(window.location.origin + window.location.pathname);
    url.searchParams.set('page', '1');
    url.searchParams.set('sortBy', '@Model.SortBy');
    window.location.href = url.toString();
}

// Auto-submit form when any filter changes (optional - for better UX)
document.addEventListener('DOMContentLoaded', function() {
    const selects = document.querySelectorAll('.busqueda-filter-select:not(#province-select):not(#brand-select)');
    const inputs = document.querySelectorAll('.busqueda-price-field');
    
    selects.forEach(select => {
        select.addEventListener('change', function() {
            // Small delay to allow multiple rapid changes
            clearTimeout(this.changeTimeout);
            this.changeTimeout = setTimeout(() => {
                document.querySelector('.busqueda-filters-form').submit();
            }, 500);
        });
    });
    
    inputs.forEach(input => {
        input.addEventListener('input', function() {
            // Longer delay for text inputs
            clearTimeout(this.inputTimeout);
            this.inputTimeout = setTimeout(() => {
                document.querySelector('.busqueda-filters-form').submit();
            }, 1000);
        });
    });
});
</script>



